pipeline {
	environment {
		imagename = "inesrhouma/gesformation_app:latest"
		registryCredential = 'dockerHub'
		dockerImage = ''
	  }
    agent any
    stages {
        
        stage('Test Build') {
            steps {
                bat "mvn package"
            }
        }
        
        stage('Sonar') {
            steps {
                bat "mvn sonar:sonar -Dmaven.test.skip=true"
            }
        }
		stage('Nexus') {
            steps {
                bat "mvn clean deploy -Dmaven.test.skip=true"
            }
        }
        
	stage('Building image') {
		steps{
        script {
          dockerImage = docker.build imagename
        }
      }
    }
    stage('Deploy Image') {	  
	  steps {
        withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
          sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
          sh 'docker push inesrhouma/gesformation_app:latest'
        }
      }

    }
	stage('Remove Unused docker image') {
      steps{
        sh "docker rmi $imagename:$BUILD_NUMBER"
         sh "docker rmi $imagename:latest"
 
      }
    }
    }
    post {
        failure {
            mail to: "ines.rhouma@esprit.tn",
            subject: "The Pipeline failed",
            body: "The Pipeline failed"
        }
    }
    
}
